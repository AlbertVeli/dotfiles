# Official cheatsheet:
https://wiki.gentoo.org/wiki/Gentoo_Cheat_Sheet


# --- My stuff ---


# --- Network interfaces

rc-update del net.enp0s31f6 default
rc-update add net.wlp2s0 default

# --- USE flags and updates ---

# Global USE flags
/etc/portage/make.conf

# Package special
/etc/portage/package.use/

# Sync and update
eix-sync
layman -S
emerge -uDN --with-bdeps=y @world
emerge --depclean

# Recompile everything
emerge -eav --usepkg=n @system
emerge -eav --usepkg=n @world


# --- Kernel ---

mount /boot
cp ../linux/.config . && make oldconfig
make -j8 && make modules_install && make install
change /usr/src/linux link (eselect kernel list)
genkernel --install initramfs
grub-mkconfig -o /boot/grub/grub.cfg
emerge -av nvidia-drivers virtualbox-modules


# --- Queries ---

# Find what package installed a file
equery belongs /usr/bin/dig

# List files installed by package
equery files gnome-online-accounts

# List all packages with a specific use flag
eix --use cpu_flags_x86_sse2

# List installed packages with a specific use flag
eix --installed-with-use alsa

# List packages installed last 2 hours
genlop -l --date -2:0:0

# Add custom ebuild(s)
vi /etc/portage/repos.conf/local.conf
# Build new manifest
repoman manifest

# Custom patches
mkdir -p /etc/portage/patches/x11-terms/xfce4-terminal
copy .patch files into created directory; cd /var/db/repos/gentoo/x11-terms/xfce4-terminal
ebuild xfce4-terminal-0.8.10.ebuild clean prepare

# Misc tips not specific to gentoo

# Dockerfile
edit Dockerfile; docker build -t mymachine .
docker run -it -v /home/albert/mydir:/mydir -p 2222:2222 mymachine

# Example Dockerfile for python CTF challenge
FROM python
RUN pip3 --no-cache-dir install flask gunicorn
WORKDIR /srv
COPY chall.py chall.jpg ./
ENV FLAG="myctf{this_is_flag}"
EXPOSE 2222
USER nobody
CMD python chall.py

# Mount vmdk
sudo modprobe nbd
sudo qemu-nbd -r -c /dev/nbd1 image.vmdk
sudo mount /dev/nbd1p1 mnt/

